// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// gd
Rcpp::List gd(arma::mat x, arma::vec y, arma::vec b, arma::vec stepsize, int maxit, float tolerance);
RcppExport SEXP _gradient_gd(SEXP xSEXP, SEXP ySEXP, SEXP bSEXP, SEXP stepsizeSEXP, SEXP maxitSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type stepsize(stepsizeSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< float >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(gd(x, y, b, stepsize, maxit, tolerance));
    return rcpp_result_gen;
END_RCPP
}
// sd
Rcpp::List sd(arma::mat x, arma::vec y, arma::vec b, int maxit, float tolerance);
RcppExport SEXP _gradient_sd(SEXP xSEXP, SEXP ySEXP, SEXP bSEXP, SEXP maxitSEXP, SEXP toleranceSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< int >::type maxit(maxitSEXP);
    Rcpp::traits::input_parameter< float >::type tolerance(toleranceSEXP);
    rcpp_result_gen = Rcpp::wrap(sd(x, y, b, maxit, tolerance));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gradient_gd", (DL_FUNC) &_gradient_gd, 6},
    {"_gradient_sd", (DL_FUNC) &_gradient_sd, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_gradient(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
